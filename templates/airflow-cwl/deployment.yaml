apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.airflow.name }}
  labels:
    app: {{ .Values.airflow.name }}
    chart: airflow
  annotations:
      argocd.argoproj.io/sync-options: Validate=false
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.airflow.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.airflow.name }}
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 0
        runAsUser: 0
        runAsGroup: 0
      containers: 
        - name: {{ .Values.airflow.name }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: airflow_COORD_HOST
              value: airflow-druid-coordinator
            - name: airflow_ROUTER_HOST
              value: router
            - name: airflow_MONGO_HOST
              value: airflow-mongodb
          ports:
          image: "{{ .Values.airflow.output_registry }}/{{ .Values.airflow.project }}/{{ .Values.airflow.name }}"
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
          stdin: true
#          command:
#            - "entrypoint"
#          args:
#            - "/usr/bin/entrypoint.sh"        
          volumeMounts:
          - name: data2
            mountPath: /datatest
          - name: {{ .Values.airflow.airflow_volumes.workdir_volume }}
            mountPath: /airflow/a-setup/
          - name: airflow-config
            mountPath: /airflow/airflow.json
            subPath: airflow.json
     
      volumes:
      - name: data2
        persistentVolumeClaim:
          claimName: s3pvc
      - name: {{ .Values.airflow.airflow_volumes.workdir_volume }}
        persistentVolumeClaim:
          claimName: {{ .Values.airflow.airflow_volumes.workdir_claim_name }}
      - name: airflow-config
        configMap:
          name: {{ .Values.airflow.name }}
          defaultMode: 420

      terminationGracePeriodSeconds: 5
